node-001:
  global:
    main:
      network: 4844-devnet-6
      engineEndpoint: http://{{ .Release.Name }}-execution:8551
      rpcEndpoint: http://{{ .Release.Name }}-execution:8545
      beaconEndpoint: http://{{ .Release.Name }}-beacon:5052
    checkpointSync:
      enabled: false
  #Geth
  nethermind:
    fullnameOverride: nethermind-lodestar-001
    enabled: true
    image:
      repository: nethermindeth/nethermind
      tag: eip-4844-v6-36
      pullPolicy: Always
    p2pNodePort:
      enabled: false
    persistence:
      enabled: true
      size: 50Gi
    podLabels:
      network: 4844-devnet-6
      testnet: 4844-devnet-6
      ethereum_network: 4844-devnet-6
      ethereum_role: execution
      consensus_client: lodestar
      execution_client: nethermind
      ethereum_instance: nethermind-lodestar-001
    resources:
      requests:
        cpu: 2000m
        memory: 5Gi
      limits:
        cpu: 3000m
        memory: 7Gi
    extraArgs:
      - --Discovery.Bootnodes="$(tr '\n' ',' < /data/bootnodes.txt)"
      - --Init.ChainSpecPath=/data/genesis.json
      - --config=none.cfg
      - --Init.IsMining=false
      - --Pruning.Mode=None
      - --JsonRpc.EnabledModules=Eth,Subscribe,Trace,TxPool,Web3,Personal,Proof,Net,Parity,Health,Rpc,Debug,Admin
      - --EthStats.Enabled=true
      - --EthStats.Name=rpc-nethermind-lodestar
      - --EthStats.Secret=<path:/secrets/services/services.enc.yaml#ethereum | jsonPath {.testnets.4844-devnets.ethstats_secret}>
      - --EthStats.Server=wss://ethstats.4844-devnet-6.ethpandaops.io
    initContainers:
    - name: init-genesis
      image: alpine:latest
      imagePullPolicy: IfNotPresent
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      command:
        - sh
        - -ace
        - >
          GENESIS_URI=https://config.4844-devnet-6.ethpandaops.io/el/chainspec.json;
          TRUSTED_SETUP_URI=https://config.4844-devnet-6.ethpandaops.io/trusted_setup.txt;
          if ! [ -f /data/genesis_init_done ];
          then
            apk update && apk add curl jq;
            wget -O /data/genesis.json $GENESIS_URI;
            curl -s https://config.4844-devnet-6.ethpandaops.io/api/v1/nodes/inventory | jq -r '.ethereum_pairs[] | .execution.enode' > /data/bootnodes.txt;
            wget -O /data/trusted_setup.txt $TRUSTED_SETUP_URI;
            cat /data/genesis.json | jq -r '.config.chainId' > /data/chainid.txt;
            touch /data/genesis_init_done;
            echo "genesis init done";
          else
            echo "genesis is already initialized";
          fi;
          echo "bootnode init done: $(cat /data/bootnodes.txt)";
      volumeMounts:
        - name: storage
          mountPath: "/data"
  # Prysm
  lodestar:
    fullnameOverride: lodestar-nethermind-001
    enabled: true
    image:
      repository: g11tech/lodestar
      tag: devnet6-789f5
      pullPolicy: Always
    mode: "beacon"
    podLabels:
      network: 4844-devnet-6
      testnet: 4844-devnet-6
      ethereum_network: 4844-devnet-6
      ethereum_role: consensus
      consensus_client: lodestar
      execution_client: nethermind
      ethereum_instance: nethermind-lodestar-001
    resources:
      requests:
        cpu: 2000m
        memory: 5Gi
      limits:
        cpu: 3000m
        memory: 7Gi
    p2pNodePort:
      enabled: false
      startsAt: 31004
    persistence:
      enabled: true
      size: 50Gi
    extraArgs:
      - --execution.urls=http://nethermind-lodestar-001:8551
      #- --checkpointSyncUrl=https://<path:/secrets/services/services.enc.yaml#ethereum | jsonPath {.testnets.4844-devnets.node_ingress.combined}>@bn.teku-nethermind-1.srv.4844-devnet-6.ethpandaops.io
      - --genesisStateFile=/data/testnet_spec/genesis.ssz
      - --paramsFile=/data/testnet_spec/config.yaml
      - --network.connectToDiscv5Bootnodes
      - --bootnodes=enr:-MS4QGZdwLfCSzm345C4_K4Rx5a8lppNtpGl4pTH0dZG-S8NId_4yHkenI7Gv9D7CnPrOTH4G-IwxhHbF9g1jSO2eAkHh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhJ_fD36Jc2VjcDI1NmsxoQIJjl6jpi_ssRltpBmcFj2hv7XmE7EMsxoUljTuyxuVeIhzeW5jbmV0c4gAAAAAAAAAAIN0Y3CCIyiDdWRwgiMo,
      enr:-Ly4QDErCwOY8un4noZonMcDFz3yGbLoZzLjPUaXkQE3D4khQpBEkwRXbmWqN4n2IgtcSVIDSR-A7xH055vr4HTlzJQBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhLymQ3aJc2VjcDI1NmsxoQOM3XKX3psXe03vdROeNwy6ekaYJJff7PmkXkKW8tfn-4hzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA,
      enr:-Ly4QHglm5wgeeTaVBylmBXjj-fIu93lT_VH_owAUz0HWK2Dfg6JKK-ufynuIjlptdtIFwcM7GHjpBR5kX0ntYgel8QBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhES3CzqJc2VjcDI1NmsxoQM4EUx20Fqk8wJ3h93vbX_NspPwnzE_PbFwlpIgG4QfQohzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA,
      enr:-Ly4QPLttpp1w2pIlPvFr22eIYDhOzLZ-sejCcawfgCCDCfiXV94XObuHiciUdQiUjNI5pBg3Ot5iqNoXETxTyetWSgBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhES3CzmJc2VjcDI1NmsxoQMMDc7RFpwCzdQu51S3uumt4rhDPIfGr5DrR01ztw5hDYhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA,
      enr:-Ly4QLXzxeWiyparWYM1j1YE848jaRQnaUg-eysIise0pIZANordcqP4iFr6BpgT_QUIh_HhHaTPldc8EZZHqdCQyPsBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhKRawU6Jc2VjcDI1NmsxoQNjFVQ9B6kUbwtApaiSubDbLh4aaE1U35h8ARwGFZTUXYhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA,
      enr:-MS4QEZwWOdap41AelNmn98FHLTCEghD2cnvHP9zoCyctpiVaaLLRJoYT0tRaIXKdfff7ODli_KdbvlSeHrHrnI3L_YHh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhKdjIvGJc2VjcDI1NmsxoQPKn0lTbM4Q4UjzD1OjB-3F5UYCIKgti06vYlTgh3K53ohzeW5jbmV0c4gAAAAAAAAAAIN0Y3CCIyiDdWRwgiMo,
      enr:-MS4QPmcqFzQXceysgwVA6jHKpe9YJZlNKHq3dvrOOUQWm9qMo9I9itjoAE5wAGrQ-1Z4H-1TVhBEv0tNmwRc4mpkVcHh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhI5di4KJc2VjcDI1NmsxoQLWjM-NMsGyv0VX5EOSifeE7eCYhMaPGm4BGUAxfiOcLYhzeW5jbmV0c4gAAAAAAAAAAIN0Y3CCIyiDdWRwgiMo,
      enr:-MS4QBVD4QFBVqE4GT0gXSLok1Iy1uKr0SN4Hd0Sx7UW8_M2SnNp_HmHwginylyqfaECYyLAh5PsE5CzegxN4eOdjN8Hh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhES3C1-Jc2VjcDI1NmsxoQI3kZ3LBLN-8mqI1wXN9sm4zg2FX_xkGyVTp14zwNtGzohzeW5jbmV0c4gAAAAAAAAAAIN0Y3CCIyiDdWRwgiMo,
      enr:-MS4QFDqOW16zag0Hq7tAOxPo0XkGWU1t-prPT9fWkYfrLdcTWkhdELaOFAa2QX2tPJJbCsxJc3jHKKVcamUxSRX8WgHh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhK6KC52Jc2VjcDI1NmsxoQLezbz--Zk2zvWKPPh2O5olT_V8UOitangkESebvXOUuohzeW5jbmV0c4gAAAAAAAAAAIN0Y3CCIyiDdWRwgiMo,
      enr:-LK4QHuJgNj4aNEwqQ-sQ5907APM3WgnZvpXuv8QnB8jcwt4K2t2rYAkjEO3nSNeQqlRRUoFiRUCQnPGAwlYbCHy1goBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpCYvFY3QBFHiQEAAAAAAAAAgmlkgnY0gmlwhI5dhyeJc2VjcDI1NmsxoQOaUEviXcXXZq29cONl-vyYhPPOi2MI3UcDS5MUy7F1m4N0Y3CCIyiDdWRwgiMo,
      enr:-LK4QO6Wihe_p7yUa3A3rOWaFNaZ_EKCV2mlGPgURzGOFI7dVUs9EmQxc5pWJGPVwANpzjM34_Y2oVsno6IEbk-HRi0Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpCYvFY3QBFHiQEAAAAAAAAAgmlkgnY0gmlwhKdHB9SJc2VjcDI1NmsxoQLsmMYpBDj_iHBwVrUVUPzzB048m9q7jrG15md8UE2RKIN0Y3CCIyiDdWRwgiMo,
      enr:-LK4QCPJUqlZYOIETemVP3jBznuVlAkWiGlgrB7kxyd1sDWKEiMctbneubiCAxwWFe4UUMdVTIEsDNyQ_Z-BwjXLiY0Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpCYvFY3QBFHiQEAAAAAAAAAgmlkgnY0gmlwhES3CECJc2VjcDI1NmsxoQPVPestezOOfNp-HfOHFF-xXV2TDibRLEWKdHYbDub_8oN0Y3CCIyiDdWRwgiMo,
      enr:-LK4QIX7rtDVxwMOlKqsRmAk3KTPpf3zFxsNLcD2jpWR2Q7qHs7Gz_JOuJrC-fpYC2EeKnNgeR8q1iL36ZTaIUpmRZoBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpCYvFY3QBFHiQEAAAAAAAAAgmlkgnY0gmlwhES3C1OJc2VjcDI1NmsxoQK121NGu0xjIt7Z-araZuNwUluXUzFbL9HiKOy5dYeGYYN0Y3CCIyiDdWRwgiMo,
      enr:-MK4QBlr1_83r_FM1v1vk9JtYkBrt5ac1KEh3Ew5-YdtEZf9Ug95OE_cBYAGfwWXD4wnldP6mQqJum65jIcCjE8KgkKGAYi1hVaKh2F0dG5ldHOIieAkRQgbQESEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhK6KC2uJc2VjcDI1NmsxoQPdQhjQRuBNJUGRh-kUpbpS97svhPI0-0Havouevg2kV4hzeW5jbmV0cw2DdGNwgiMog3VkcIIjKA,
      enr:-MK4QNlfE1TJbVQIVDwq7yR8PoofjfARsnEBGlXX6OicaMbVXMPxpCKqH7sEhhjvf8x2VFgE5IrEIU7XEPzTUipXVsuGAYi1hVlRh2F0dG5ldHOIOg6goDSIAPCEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhEDhRp2Jc2VjcDI1NmsxoQPk4P3EstBYas17nRlHJubpUMjybmOw6ZqE0VFArVfcmYhzeW5jbmV0cw-DdGNwgiMog3VkcIIjKA,
      enr:-MK4QFg3AEjEG1CTG1FTmNVX7stpREzroetp15sxQLzayELpa0WJTXdU3xql0GzC50Z5LPN8Ru2ZVg-AJZLhbY7jzHWGAYi1hUwLh2F0dG5ldHOIjBEEnywJowOEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhES3C06Jc2VjcDI1NmsxoQI3-kMJZtU38zDcw9xI5G42R42d_KNMU1RCkqCw647S-4hzeW5jbmV0cw6DdGNwgiMog3VkcIIjKA,
      enr:-MK4QDzUdM2huCbGzWmX8neTdSyxy6lgh-LZIfWnGxeg1OKCBEs9O-r-YgwDauKIAKP4l3SJ55WmAkdfa4kEOAlOczKGAYi1hV51h2F0dG5ldHOIggVSSohAS5aEZXRoMpDKqb2ZQBFHiQEAAAAAAAAAgmlkgnY0gmlwhKRayOSJc2VjcDI1NmsxoQPLU-uvLVLAFJEu5ZuwPaLM0l0wzJ1RZSNS5QCQtMMRmYhzeW5jbmV0cw2DdGNwgiMog3VkcIIjKA,
      enr:-KG4QHjuUKusjdS1B5CljoxluzESTAhLz-zuHgOyRIH81zwHDX7_s-tHJnKYsVnPNqUI88yQMJQpc3aUaejjUCdZHXUDhGV0aDKQyqm9mUARR4kBAAAAAAAAAIJpZIJ2NIJpcISnYywQiXNlY3AyNTZrMaEChNY28yRIlFBY-ZXNZ0debdV4nA2Y6VnMg-7WGcd3zwKDdGNwgiMog3VkcIIjKA,
      enr:-KG4QPp7NhUO9NbXcz8nhUJiNod_H3GI_PM9RwfHcjP92zljJtb95pr_8D9Hm_MbpEfWlbuegQYPP3Id-3z6y9m-LfUDhGV0aDKQyqm9mUARR4kBAAAAAAAAAIJpZIJ2NIJpcIRo-FmriXNlY3AyNTZrMaEDKwr7tHGPS1Ek-mSRu8yow5DrWOS-DA44CZtsVTSIy6CDdGNwgiMog3VkcIIjKA,
      enr:-KG4QO9amat66XEW1Jq5uzwvub7ziOH9nkxJdaAAAbtF9c_-LHM9nzY8CKcaiDgAm6fLh9GsLUQNKP5mpfCFqJMRIbUDhGV0aDKQyqm9mUARR4kBAAAAAAAAAIJpZIJ2NIJpcITOvQi4iXNlY3AyNTZrMaEDgmvxtjQMaGZmjRcL0taDtuP_7SHxYQTE3vox7NVg6zODdGNwgiMog3VkcIIjKA,
      enr:-KG4QNJsQgheTPhNAfN54BQgKTLAM6-E6VNYvTDl7ZosWq6AObC-9olxTQCEAj2ui2tJjmXbhIcQhElUMj8-dkPIHaIDhGV0aDKQyqm9mUARR4kBAAAAAAAAAIJpZIJ2NIJpcISuigvJiXNlY3AyNTZrMaECI6FkyP0hBZS6eu_biWyQAan69ZZuwxrUuA57LxXmAhaDdGNwgiMog3VkcIIjKA
    initContainers:
    - name: init-genesis
      image: alpine:latest
      imagePullPolicy: IfNotPresent
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      command:
        - sh
        - -ace
        - >
          DEPOSIT_CONTRACT_URI=https://config.4844-devnet-6.ethpandaops.io/deposit_contract.txt;
          DEPOSIT_CONTRACT_BLOCK_URI=https://config.4844-devnet-6.ethpandaops.io/cl/deposit_contract_block.txt;
          DEPLOY_BLOCK_URI=https://config.4844-devnet-6.ethpandaops.io/cl/deploy_block.txt;
          GENESIS_CONFIG_URI=https://config.4844-devnet-6.ethpandaops.io/cl/config.yaml;
          GENESIS_SSZ_URI=https://config.4844-devnet-6.ethpandaops.io/cl/genesis.ssz;
          BOOTNODE_URI=https://config.4844-devnet-6.ethpandaops.io/bootstrap_nodes.txt;
          TRUSTED_SETUP_URI=https://config.4844-devnet-6.ethpandaops.io/trusted_setup.txt;
          mkdir -p /data/testnet_spec;
          if ! [ -f /data/testnet_spec/genesis.ssz ];
          then
            wget -O /data/testnet_spec/deposit_contract.txt $DEPOSIT_CONTRACT_URI;
            wget -O /data/testnet_spec/deposit_contract_block.txt $DEPOSIT_CONTRACT_BLOCK_URI;
            wget -O /data/testnet_spec/deploy_block.txt $DEPLOY_BLOCK_URI;
            wget -O /data/testnet_spec/config.yaml $GENESIS_CONFIG_URI;
            wget -O /data/testnet_spec/genesis.ssz $GENESIS_SSZ_URI;
            wget -O /data/testnet_spec/bootstrap_nodes.txt $BOOTNODE_URI;
            wget -O /data/testnet_spec/trusted_setup.txt $TRUSTED_SETUP_URI;
            echo "genesis init done";
          else
            echo "genesis exists. skipping...";
          fi;
          echo "bootnode init done: $(cat /data/testnet_spec/bootstrap_nodes.txt)";
      volumeMounts:
        - name: storage
          mountPath: "/data"
