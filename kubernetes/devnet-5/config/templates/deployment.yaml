apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-web
  labels:
    app: nginx-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-web
  template:
    metadata:
      labels:
        app: nginx-web
    spec:
      initContainers:
        - name: enode-enr
          image: alpine:latest
          command:
            - /bin/sh
            - -c
            - >
              apk update -q && apk add -q --no-cache curl jq ansible;
              echo installed curl jq and ansible;
              which curl;
              which jq; 
              which ansible;
              curl -s https://raw.githubusercontent.com/ethpandaops/4844-testnet/master/ansible/inventories/devnet-5/inventory.ini > /config/inventory.ini;
              echo "Created inventory.ini";
              cat /config/inventory.ini;
              ansible all -i /config/inventory.ini --list-hosts > /config/hosts.txt;
              echo "Created hosts.txt";
              cat /config/hosts.txt;
              # create empty enode/enr files to start
              null > /config/enode.txt;
              null > /config/enr.txt;
              # make call to each node to get enode and enr and write to file
              tail -n +2 "/config/hosts.txt" | while read -r host; do
                echo "Making request to ${host}...";
                curl -s -u $COMBINED --data '{"method":"admin_nodeInfo","params":[],"id":1,"jsonrpc":"2.0"}' -H "Content-Type: application/json"  -X POST "https://rpc.${host}.srv.4844-devnet-5.ethpandaops.io" | jq -r '.result.enode' >> /config/enode.txt;
                curl -s -u $COMBINED https://bn.${host}.srv.4844-devnet-5.ethpandaops.io/eth/v1/node/identity | jq -r .'data.enr' >> /config/enr.txt;
              done;
              echo "Wrote enode to /config/enode.txt";
              echo "Wrote enr to /config/enr.txt";
          volumeMounts:
            - name: config
              mountPath: /config
          env: 
            - name: COMBINED
              valueFrom:
                secretKeyRef:
                  name: nginxlogin
                  key: combined
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /usr/share/nginx/html
      volumes:
        - name: config
          emptyDir: {}
        - name: secrets
          secret:
            secretName: nginxlogin