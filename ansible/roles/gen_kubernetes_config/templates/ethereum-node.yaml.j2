# ANSIBLE GENERATED FILE - DO NOT EDIT MANUALLY
ethereum-node:
  global:
    main:
      network: {{ ethereum_network_name }}
      engineEndpoint: {{ "http://" + el + "-" + cl +"-001:8551" }}
      rpcEndpoint: {{ "http://" + el + "-" + cl +"-001:8545" }}
      beaconEndpoint: {{ "http://" + cl + "-" + el +"-001:5052" }}
    checkpointSync:
      enabled: false
  {{ el }}:
    fullnameOverride: {{ el }}-{{ cl }}-001
    enabled: true
    image:
      repository: {{ default_ethereum_client_images[el] | split(':') | first }}
      tag: {{ default_ethereum_client_images[el] | split(':') | last }}
      pullPolicy: Always
    p2pNodePort:
      enabled: false
    persistence:
      enabled: true
      size: 50Gi
    podLabels:
      network: {{ ethereum_network_name }}
      testnet: {{ ethereum_network_name }}
      ethereum_network: {{ ethereum_network_name }}
      ethereum_role: execution
      consensus_client: {{ cl }}
      execution_client: {{ el }}
      ethereum_instance: {{ el }}-{{ cl }}-001
    resources:
      requests:
        cpu: 2000m
        memory: 5Gi
      limits:
        cpu: 3000m
        memory: 7Gi
    extraArgs:
{% for host in (groups['all']) | sort %}
{% if host == cl + '-' + el + '-1' %}
{% for arg in hostvars[host][el + '_container_command_extra_args'] %}
{% if arg.startswith('--EthStats.Name=') %}
      - --EthStats.Name=k8s-{{ el }}-{{ cl }}
{% else %}
      - {{ arg }}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
    initContainers:
    - name: init-genesis
      image: alpine:latest
      imagePullPolicy: IfNotPresent
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      command:
        - sh
        - -ace
        - >
          GENESIS_URI=https://config.{{ ethereum_network_name }}.ethpandaops.io/el/chainspec.json;
          TRUSTED_SETUP_URI=https://config.{{ ethereum_network_name }}.ethpandaops.io/trusted_setup.txt;
          if ! [ -f /data/genesis_init_done ];
          then
            apk update && apk add curl jq;
            wget -O /data/genesis.json $GENESIS_URI;
            curl -s https://config.{{ ethereum_network_name }}.ethpandaops.io/api/v1/nodes/inventory | jq -r '.ethereum_pairs[] | .execution.enode' > /data/ethereum-network-config/bootnode.txt;
            wget -O /data/trusted_setup.txt $TRUSTED_SETUP_URI;
            cat /data/genesis.json | jq -r '.config.chainId' > /data/chainid.txt;
            touch /data/genesis_init_done;
            echo "genesis init done";
          else
            echo "genesis is already initialized";
          fi;
          echo "bootnode init done: $(cat /data/ethereum-network-config/bootnode.txt)";
      volumeMounts:
        - name: storage
          mountPath: "/data"
  {{ cl }}:
    fullnameOverride: {{ cl }}-{{ el }}-001
    enabled: true
    image:
      repository: {{ default_ethereum_client_images[cl] | split(':') | first }}
      tag: {{ default_ethereum_client_images[cl] | split(':') | last }}
      pullPolicy: Always
    mode: "beacon"
    podLabels:
      network: {{ ethereum_network_name }}
      testnet: {{ ethereum_network_name }}
      ethereum_network: {{ ethereum_network_name }}
      ethereum_role: consensus
      consensus_client: {{ cl }}
      execution_client: {{ el }}
      ethereum_instance: {{ el }}-{{ cl }}-001
    resources:
      requests:
        cpu: 2000m
        memory: 5Gi
      limits:
        cpu: 3000m
        memory: 7Gi
    p2pNodePort:
      enabled: false
      startsAt: 31004
    persistence:
      enabled: true
      size: 50Gi
    extraArgs:
{% for host in (groups['all']) | sort %}
{% if host == cl + '-' + el +'-1' %}
{% for arg in hostvars[host][cl + '_container_command_extra_args'] %}
      - {{ arg }}
{% endfor %}
{% endif %}
{% endfor %}
    initContainers:
    - name: init-genesis
      image: alpine:latest
      imagePullPolicy: IfNotPresent
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      command:
        - sh
        - -ace
        - >
          apk add jq curl sed;
          DEPOSIT_CONTRACT_URI=https://config.{{ ethereum_network_name }}.ethpandaops.io/deposit_contract.txt;
          DEPOSIT_CONTRACT_BLOCK_URI=https://config.{{ ethereum_network_name }}.ethpandaops.io/cl/deposit_contract_block.txt;
          DEPLOY_BLOCK_URI=https://config.{{ ethereum_network_name }}.ethpandaops.io/cl/deploy_block.txt;
          GENESIS_CONFIG_URI=https://config.{{ ethereum_network_name }}.ethpandaops.io/cl/config.yaml;
          GENESIS_SSZ_URI=https://config.{{ ethereum_network_name }}.ethpandaops.io/cl/genesis.ssz;
          curl -s https://config.{{ ethereum_network_name }}.ethpandaops.io/api/v1/nodes/inventory | jq -r '.ethereum_pairs[] | .consensus.enr' > /data/bootnodes.txt;
          TRUSTED_SETUP_URI=https://config.{{ ethereum_network_name }}.ethpandaops.io/trusted_setup.txt;
          mkdir -p /data/testnet_spec;
          if ! [ -f /data/testnet_spec/genesis.ssz ];
          then
            wget -O /data/testnet_spec/deposit_contract.txt $DEPOSIT_CONTRACT_URI;
            wget -O /data/testnet_spec/deposit_contract_block.txt $DEPOSIT_CONTRACT_BLOCK_URI;
            wget -O /data/testnet_spec/deploy_block.txt $DEPLOY_BLOCK_URI;
            wget -O /data/testnet_spec/config.yaml $GENESIS_CONFIG_URI;
            wget -O /data/testnet_spec/genesis.ssz $GENESIS_SSZ_URI;
            wget -O /data/testnet_spec/trusted_setup.txt $TRUSTED_SETUP_URI;
            echo "genesis init done";
          else
            echo "genesis exists. skipping...";
          fi;
          (tr '\n' ',' < /data/bootnodes.txt | sed 's/[^,]*/"&"/g') > /data/bootnodes2.txt;
          mv /data/bootnodes2.txt /data/ethereum-network-config/boot_enr.txt;
          echo "bootnode init done: $(cat /data/ethereum-network-config/boot_enr.txt)";
      volumeMounts:
        - name: storage
          mountPath: "/data"
# ANSIBLE GENERATED FILE - DO NOT EDIT MANUALLY