# {{ ansible_managed }}

{{ item.key | replace('_', '-') }}:
  global:
    main:
      network: {{ ethereum_network_name }}
    checkpointSync:
      enabled: false
        addresses: https://<path:/secrets/services/services.enc.yaml#ethereum | jsonPath {.testnets.dencun-devnets.node_ingress.combined}>@bn.teku-geth-1.srv.{{ ethereum_network_name }}.ethpandaops.io
  {{ gen_kubernetes_config_ethereum_node.el }}:
    fullnameOverride: {{ gen_kubernetes_config_ethereum_node.el }}-{{ gen_kubernetes_config_ethereum_node.cl }}-001
    enabled: true
    image:
      repository: {{ default_ethereum_client_images[gen_kubernetes_config_ethereum_node.el] | split(':') | first }}
      tag: {{ default_ethereum_client_images[gen_kubernetes_config_ethereum_node.el] | split(':') | last }}
      pullPolicy: Always
    p2pNodePort:
      enabled: false
    persistence:
      enabled: true
      size: 50Gi
    podLabels:
      network: {{ ethereum_network_name }}
      testnet: {{ ethereum_network_name }}
      ethereum_network: {{ ethereum_network_name }}
      ethereum_role: execution
      consensus_client: {{ gen_kubernetes_config_ethereum_node.cl }}
      execution_client: {{ gen_kubernetes_config_ethereum_node.el }}
      ethereum_instance: {{ gen_kubernetes_config_ethereum_node.el }}-{{ gen_kubernetes_config_ethereum_node.cl }}-001
    resources:
      requests:
        cpu: 2000m
        memory: 5Gi
      limits:
        cpu: 3000m
        memory: 7Gi
    extraArgs:
{% if gen_kubernetes_config_ethereum_node.el == 'nethermind' %}
      - --Discovery.Bootnodes="$(tr '\n' ',' < /data/bootnodes.txt)"
      - --Init.ChainSpecPath=/data/genesis.json
      - --config=none.cfg
      - --Init.IsMining=false
      - --Pruning.Mode=None
      - --JsonRpc.EnabledModules=Eth,Subscribe,Trace,TxPool,Web3,Personal,Proof,Net,Parity,Health,Rpc,Debug,Admin
      - --EthStats.Enabled=true
      - --EthStats.Name=k8s-{{ gen_kubernetes_config_ethereum_node.el }}-{{ gen_kubernetes_config_ethereum_node.cl }}-001
      - --EthStats.Secret=<path:/secrets/services/services.enc.yaml#ethereum | jsonPath {.testnets.dencun-devnets.ethstats_secret}>
      - --EthStats.Server=wss://ethstats.{{ network_subdomain }}
{% endif %}
    initContainers:
{% if gen_kubernetes_config_ethereum_node.el == 'nethermind' %}
    - name: init-genesis
      image: alpine:latest
      imagePullPolicy: IfNotPresent
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      command:
        - sh
        - -ace
        - >
          GENESIS_URI=https://config.{{ network_subdomain }}/el/chainspec.json;
          TRUSTED_SETUP_URI=https://config.{{ network_subdomain }}/trusted_setup.txt;
          if ! [ -f /data/genesis_init_done ];
          then
            apk update && apk add curl jq;
            wget -O /data/genesis.json $GENESIS_URI;
            curl -s https://config.{{ network_subdomain }}/api/v1/nodes/inventory | jq -r '.ethereum_pairs[] | .execution.enode' > /data/bootnodes.txt;
            wget -O /data/trusted_setup.txt $TRUSTED_SETUP_URI;
            cat /data/genesis.json | jq -r '.config.chainId' > /data/chainid.txt;
            touch /data/genesis_init_done;
            echo "genesis init done";
          else
            echo "genesis is already initialized";
          fi;
          echo "bootnode init done: $(cat /data/bootnodes.txt)";
      volumeMounts:
        - name: storage
          mountPath: "/data"
{% endif %}

  {{ gen_kubernetes_config_ethereum_node.cl }}:
    fullnameOverride: {{ gen_kubernetes_config_ethereum_node.cl }}-{{ gen_kubernetes_config_ethereum_node.el }}-001
    enabled: true
    image:
      repository: {{ default_ethereum_client_images[gen_kubernetes_config_ethereum_node.cl] | split(':') | first }}
      tag: {{ default_ethereum_client_images[gen_kubernetes_config_ethereum_node.cl] | split(':') | last }}
      pullPolicy: Always
    mode: "beacon"
    podLabels:
      network: {{ ethereum_network_name }}
      testnet: {{ ethereum_network_name }}
      ethereum_network: {{ ethereum_network_name }}
      ethereum_role: consensus
      consensus_client: {{ gen_kubernetes_config_ethereum_node.cl }}
      execution_client: {{ gen_kubernetes_config_ethereum_node.el }}
      ethereum_instance: {{ gen_kubernetes_config_ethereum_node.el }}-{{ gen_kubernetes_config_ethereum_node.cl }}-001
    resources:
      requests:
        cpu: 2000m
        memory: 5Gi
      limits:
        cpu: 3000m
        memory: 7Gi
    p2pNodePort:
      enabled: false
    persistence:
      enabled: true
      size: 50Gi
    extraArgs:
{% if gen_kubernetes_config_ethereum_node.cl == 'lodestar' %}
      - --execution.urls=http://nethermind-lodestar-001:8551
      - --genesisStateFile=/data/testnet_spec/genesis.ssz
      - --paramsFile=/data/testnet_spec/config.yaml
      - --network.connectToDiscv5Bootnodes
      - --bootnodesFile=/data/bootnodes.txt
      - --rest.namespace='*'
{% elif gen_kubernetes_config_ethereum_node.cl == 'teku' %}
      - --network=/data/testnet_spec/config.yaml
      - --initial-state=/data/testnet_spec/genesis.ssz
      - --p2p-discovery-bootnodes=ADD_BOOTNODES_HERE
      - --p2p-peer-upper-bound=100
      - --data-storage-non-canonical-blocks-enabled=true
      - --data-storage-mode=PRUNE
      - --logging=info
      - --Xlog-include-p2p-warnings-enabled
      - --metrics-block-timing-tracking-enabled
      - --Xmetrics-blob-sidecars-storage-enabled=true
      - --Xtrusted-setup=/data/testnet_spec/trusted_setup.txt
      - --Xpeer-rate-limit=100000
      - --Xpeer-request-limit=1000
      - --Xepochs-store-blobs=max # Keep blobs forever
{% endif %}
    initContainers:
    - name: init-genesis
      image: alpine:latest
      imagePullPolicy: IfNotPresent
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      command:
        - sh
        - -ace
        - >
          apk add jq curl sed;
          DEPOSIT_CONTRACT_URI=https://config.{{ network_subdomain }}/deposit_contract.txt;
          DEPOSIT_CONTRACT_BLOCK_URI=https://config.{{ network_subdomain }}/cl/deposit_contract_block.txt;
          DEPLOY_BLOCK_URI=https://config.{{ network_subdomain }}/cl/deploy_block.txt;
          GENESIS_CONFIG_URI=https://config.{{ network_subdomain }}/cl/config.yaml;
          GENESIS_SSZ_URI=https://config.{{ network_subdomain }}/cl/genesis.ssz;
          curl -s https://config.{{ network_subdomain }}/api/v1/nodes/inventory | jq -r '.ethereum_pairs[] | .consensus.enr' > /data/bootnodes.txt;
          TRUSTED_SETUP_URI=https://config.{{ network_subdomain }}/trusted_setup.txt;
          mkdir -p /data/testnet_spec;
          if ! [ -f /data/testnet_spec/genesis.ssz ];
          then
            wget -O /data/testnet_spec/deposit_contract.txt $DEPOSIT_CONTRACT_URI;
            wget -O /data/testnet_spec/deposit_contract_block.txt $DEPOSIT_CONTRACT_BLOCK_URI;
            wget -O /data/testnet_spec/deploy_block.txt $DEPLOY_BLOCK_URI;
            wget -O /data/testnet_spec/config.yaml $GENESIS_CONFIG_URI;
            wget -O /data/testnet_spec/genesis.ssz $GENESIS_SSZ_URI;
            wget -O /data/testnet_spec/trusted_setup.txt $TRUSTED_SETUP_URI;
            echo "genesis init done";
          else
            echo "genesis exists. skipping...";
          fi;
          (tr '\n' ',' < /data/bootnodes.txt | sed 's/[^,]*/"&"/g') > /data/bootnodes2.txt;
          mv /data/bootnodes2.txt /data/bootnodes.txt;
          echo "bootnode init done: $(cat /data/bootnodes.txt)";
      volumeMounts:
        - name: storage
          mountPath: "/data"
